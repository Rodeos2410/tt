import sys # Импортируем sys для настройки кодировки вывода, если это нужно

def find_lines_containing_text(filename):
    """
    Ищет строки в файле, содержащие указанный текст (не обязательно в начале),
    и выводит всю строку целиком. Поиск регистронезависимый.

    Args:
        filename (str): Имя текстового файла для поиска.
    """
    text_to_find = input("Введите текст (например, ФИО или его часть) для поиска в любой части строки: ")
    found = False

    # Переводим искомый текст в нижний регистр для регистронезависимого поиска
    text_to_find_lower = text_to_find.lower()

    # --- Отладочный вывод: Проверяем, что ищем ---
    # print(f"Ищем текст (в нижнем регистре): '{text_to_find_lower}'")
    # print("-" * 20)
    # ------------------------------------------

    try:
        # Открываем файл для чтения.
        # Используем кодировку windows-1251, так как ошибка 0xae характерна для нее
        # Если вы сохранили файл в VS Code как UTF-8, измените 'windows-1251' на 'utf-8'
        with open(filename, 'r', encoding='UTF-8') as f:
            for line in f:
                # --- Отладочный вывод: Проверяем каждую строку до обработки ---
                # print(f"Прочитана строка (до обработки): '{line}'")
                # -----------------------------------------------------------

                # Удаляем пробельные символы в начале и конце строки и переводим ее в нижний регистр
                line_stripped_lower = line.strip().lower()

                # --- Отладочный вывод: Проверяем строку после обработки ---
                # print(f"Обработанная строка (нижний регистр): '{line_stripped_lower}'")
                # ---------------------------------------------------------


                # Проверяем, содержится ли искомый текст (в нижнем регистре)
                # в текущей строке (также в нижнем регистре)
                if text_to_find_lower in line_stripped_lower:
                    # Если найдено совпадение, выводим исходную строку без лишних пробелов по краям
                    # Используем sys.stdout.encoding для корректного вывода в консоль
                    # print(line.strip().encode(sys.stdout.encoding, errors='replace').decode(sys.stdout.encoding))
                    print(line.strip()) # Обычно просто print(line.strip()) достаточно

                    found = True

        if not found:
            print(f"Строки, содержащие текст '{text_to_find}', не найдены в файле '{filename}'.")

    except FileNotFoundError:
        print(f"Ошибка: Файл '{filename}' не найден.")
    except UnicodeDecodeError as e:
        # Обрабатываем ошибку декодирования отдельно, чтобы дать более точное сообщение
        print(f"Ошибка декодирования при чтении файла '{filename}': {e}")
        print("Возможно, файл сохранен в другой кодировке. Попробуйте изменить 'encoding=' в коде.")
    except Exception as e:
        print(f"Произошла ошибка: {e}")

# Укажите имя вашего файла здесь
file_name = 'kiwi.txt'

# Запускаем функцию поиска
find_lines_containing_text(file_name)